(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1469:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(422).configure)([__webpack_require__(1470)],module,!1)}).call(this,__webpack_require__(149)(module))},1470:function(module,exports,__webpack_require__){var map={"./mapbox/src/components/Mapbox.stories.js":1477,"./svg-maps/src/components/states/StateMap.stories.js":1479};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1470},1477:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Base",(function(){return Mapbox_stories_Base}));__webpack_require__(6);var react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=(__webpack_require__(7),__webpack_require__(16),__webpack_require__(27),__webpack_require__(34),__webpack_require__(19),__webpack_require__(21),__webpack_require__(22),__webpack_require__(20),__webpack_require__(28),__webpack_require__(9),__webpack_require__(11),__webpack_require__(18),__webpack_require__(25),__webpack_require__(23),__webpack_require__(26),__webpack_require__(556)),dist_default=__webpack_require__.n(dist),esm=__webpack_require__(246),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),viewport_mercator_project_module=__webpack_require__(40),src=__webpack_require__(190),utils_getStateBoundingBoxByFips=function getStateBoundingBoxByFips(fips){var state=fips?Object(src.b)(fips):{xmin:-125.0011,ymin:24.9493,xmax:-66.9326,ymax:49.5904};return[[state.xmin,state.ymin],[state.xmax,state.ymax]]},utils_getStateViewportByFips=function getStateViewportByFips(fips,_ref2){var width=_ref2.width,height=_ref2.height;return new viewport_mercator_project_module.a({width:width,height:height}).fitBounds(utils_getStateBoundingBoxByFips(fips),{padding:20})},zustand=__webpack_require__(244),bbox=__webpack_require__(558),bbox_default=__webpack_require__.n(bbox),cubic=__webpack_require__(1493),DEFAULT_VIEWPORT={latitude:37.39,longitude:-96.78,zoom:3.15},DEFAULT_FLIGHT_PROPS={transitionDuration:3e3,transitionInterpolator:new esm.a,transitionEasing:cubic.a};function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var useMapStore_getViewportForBounds=function getViewportForBounds(bounds,baseViewport){var options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},width=baseViewport.width,height=baseViewport.height,padding=options.padding||20,vp=new viewport_mercator_project_module.a({width:width,height:height}).fitBounds(bounds,{padding:padding});return Object.assign({},baseViewport,{latitude:vp.latitude,longitude:vp.longitude,zoom:vp.zoom})},_create=Object(zustand.a)((function(set,get){return{loaded:!1,resetViewport:Object.assign({},DEFAULT_VIEWPORT),viewport:DEFAULT_VIEWPORT,hoveredFeature:null,setHoveredFeature:function setHoveredFeature(hoveredFeature){return set({hoveredFeature:hoveredFeature})},setViewport:function setViewport(viewport){return set((function(state){return{viewport:Object.assign({},state.viewport,viewport)}}))},setResetViewport:function setResetViewport(resetViewport){return set({resetViewport:resetViewport})},setLoaded:function setLoaded(loaded){return set({loaded:loaded})},flyToFeature:function flyToFeature(feature){var viewport=Object.assign({},function getViewportForFeature(feature,initialViewport){var type=function getFeatureGeometryType(feature){return feature.geometry&&feature.geometry.type?feature.geometry.type:null}(feature);if(!type)return{};if("Point"===type){var _feature$geometry$coo=_slicedToArray(feature.geometry.coordinates,2),longitude=_feature$geometry$coo[0];return{latitude:_feature$geometry$coo[1],longitude:longitude,zoom:14}}var featureBbox=bbox_default()(feature),bounds=[[featureBbox[0],featureBbox[1]],[featureBbox[2],featureBbox[3]]];return useMapStore_getViewportForBounds(bounds,initialViewport)}(feature,get().viewport),DEFAULT_FLIGHT_PROPS);set({viewport:viewport})},flyToBounds:function flyToBounds(bounds){set((function(state){return{viewport:Object.assign({},useMapStore_getViewportForBounds(bounds,state.viewport),DEFAULT_FLIGHT_PROPS)}}))},flyToLatLon:function flyToLatLon(lat,lon,zoom){set((function(state){return{viewport:Object.assign({},state.viewport,{latitude:lat,longitude:lon,zoom:zoom},DEFAULT_FLIGHT_PROPS)}}))},flyToState:function flyToState(stateId){set((function(state){return{viewport:Object.assign({},state.viewport,utils_getStateViewportByFips(stateId,state.viewport),DEFAULT_FLIGHT_PROPS)}}))},flyToReset:function flyToReset(){set((function(state){return{viewport:Object.assign({},state.viewport,state.resetViewport,DEFAULT_FLIGHT_PROPS)}}))}}})),hooks_useMapStore=_slicedToArray(_create,1)[0];var shallow=__webpack_require__(108),shallow_default=__webpack_require__.n(shallow);__webpack_require__(55),__webpack_require__(56);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function Mapbox_slicedToArray(arr,i){return function Mapbox_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function Mapbox_iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function Mapbox_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return Mapbox_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Mapbox_arrayLikeToArray(o,minLen)}(arr,i)||function Mapbox_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Mapbox_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Mapbox=react_default.a.forwardRef((function(_ref,ref){var mapStyle=_ref.mapStyle,styleOverrides=_ref.style,children=_ref.children,defaultViewport=(_ref.idMap,_ref.selectedColors,_ref.defaultViewport),maxBounds=_ref.maxBounds,minZoom=_ref.minZoom,ariaLabel=_ref.ariaLabel,MapGLProps=_ref.MapGLProps,onHover=_ref.onHover,onClick=_ref.onClick,onLoad=_ref.onLoad,rest=_objectWithoutProperties(_ref,["mapStyle","style","children","idMap","selectedColors","defaultViewport","maxBounds","minZoom","ariaLabel","MapGLProps","onHover","onClick","onLoad"]),_useMapStore2=Mapbox_slicedToArray(hooks_useMapStore((function(state){return[state.loaded,state.setLoaded]}),shallow_default.a),2),loaded=_useMapStore2[0],setLoaded=_useMapStore2[1],_useMapStore4=Mapbox_slicedToArray(hooks_useMapStore((function(state){return[state.hoveredFeature,state.setHoveredFeature]}),shallow_default.a),2),hoveredFeature=_useMapStore4[0],setHoveredFeature=_useMapStore4[1],_useResizeAware2=Mapbox_slicedToArray(dist_default()(),2),resizeListener=_useResizeAware2[0],sizes=_useResizeAware2[1],_useMapViewport2=Mapbox_slicedToArray(function useMapViewport(){return hooks_useMapStore((function(state){return[state.viewport,state.setViewport]}),shallow_default.a)}(),2),viewport=_useMapViewport2[0],setViewport=_useMapViewport2[1],setResetViewport=hooks_useMapStore((function(state){return state.setResetViewport})),combinedRef=function useCombinedRefs(){for(var _len=arguments.length,refs=new Array(_len),_key=0;_key<_len;_key++)refs[_key]=arguments[_key];var targetRef=Object(react.useRef)();return Object(react.useEffect)((function(){refs.forEach((function(ref){ref&&("function"==typeof ref?ref(targetRef.current):ref.current=targetRef.current)}))}),[refs]),targetRef}(ref,react_default.a.useRef(null)),currentMap=Object(react.useMemo)((function(){return combinedRef.current&&combinedRef.current.getMap&&combinedRef.current.getMap()}),[combinedRef.current]),canvas=currentMap&&currentMap.getCanvas(),handleViewportChange=Object(react.useCallback)((function(vp){loaded&&(vp.zoom&&vp.zoom<minZoom&&(vp.zoom=minZoom),maxBounds&&maxBounds.length>0&&(vp.longitude<maxBounds[0][0]&&(vp.longitude=maxBounds[0][0]),vp.longitude>maxBounds[1][0]&&(vp.longitude=maxBounds[1][0]),vp.latitude<maxBounds[0][1]&&(vp.latitude=maxBounds[0][1]),vp.latitude>maxBounds[1][1]&&(vp.latitude=maxBounds[1][1])),setViewport(vp))}),[setViewport,maxBounds,minZoom,loaded]),handleHover=function handleHover(_ref2){var features=_ref2.features,point=_ref2.point,srcEvent=_ref2.srcEvent,newHoveredFeature=features&&features.length>0?features[0]:null;setHoveredFeature(newHoveredFeature),onHover&&onHover(newHoveredFeature,{features:features,point:point,srcEvent:srcEvent})};return Object(react.useEffect)((function(){canvas&&canvas.setAttribute("aria-label",ariaLabel)}),[ariaLabel,canvas]),Object(react.useEffect)((function(){defaultViewport&&setResetViewport(Object.assign({},defaultViewport))}),[defaultViewport,setResetViewport]),Object(react.useEffect)((function(){setViewport({width:sizes.width,height:sizes.height})}),[sizes,setViewport]),Object(react.useEffect)((function(){}),[hoveredFeature]),react_default.a.createElement("div",_extends({id:"map",className:"map",style:Object.assign({position:"relative",width:"100%",minHeight:400},styleOverrides),onMouseLeave:function onMouseLeave(e){return handleHover({features:null,point:[null,null],srcEvent:e})}},rest),resizeListener,react_default.a.createElement(esm.b,_extends({ref:combinedRef,mapStyle:mapStyle,dragRotate:!1,touchRotate:!1,dragPan:!0,touchZoom:!0,onViewportChange:handleViewportChange,onHover:handleHover,onClick:function handleClick(_ref3){var features=_ref3.features,srcEvent=_ref3.srcEvent,rest=_objectWithoutProperties(_ref3,["features","srcEvent"]),isControl=function getClosest(elem,selector){for(Element.prototype.matches||(Element.prototype.matches=Element.prototype.matchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector||Element.prototype.webkitMatchesSelector||function(s){for(var matches=(this.document||this.ownerDocument).querySelectorAll(s),i=matches.length;--i>=0&&matches.item(i)!==this;);return i>-1});elem&&elem!==document;elem=elem.parentNode)if(elem.matches(selector))return elem;return null}(srcEvent.target,".mapboxgl-ctrl-group");features&&features.length>0&&!isControl&&onClick&&onClick(features[0],Object.assign({features:features,srcEvent:srcEvent},rest))},onLoad:function handleLoad(e){if(!loaded){setLoaded(!0);var tabindexEl=document.querySelector(".map:first-child");tabindexEl&&tabindexEl.children[0].removeAttribute("tabindex"),canvas&&(canvas.setAttribute("role","img"),canvas.setAttribute("aria-label",ariaLabel)),onLoad&&onLoad(e)}}},viewport,MapGLProps),children))}));Mapbox.defaultProps={style:{},mapStyle:"mapbox://styles/hyperobjekt/cke1roqr302yq19jnlpc8dgr9",idMap:{},selectedColors:["#00ff00"],MapGLProps:{},minZoom:2,ariaLabel:"map",onHover:function onHover(){},onClick:function onClick(){},onLoad:function onLoad(){}},Mapbox.propTypes={style:prop_types_default.a.object,mapStyle:prop_types_default.a.string,idMap:prop_types_default.a.object,selectedColors:prop_types_default.a.arrayOf(prop_types_default.a.string),MapGLProps:prop_types_default.a.object,onHover:prop_types_default.a.func,onClick:prop_types_default.a.func,onLoad:prop_types_default.a.func,children:prop_types_default.a.node},Mapbox.__docgenInfo={description:'A component for rendering an interactive Mapbox map based off of [ReactMapGL](https://github.com/visgl/react-map-gl)\n\nTo use this component add it to your project\n\n```\nnpm install @hyperobjekt/mapbox\n```\nor\n```\nyarn add @hyperobjekt/mapbox\n```\n\nThen import it into your project with:\n\n```\nimport Mapbox from "@hyperobjekt/mapbox"\n```',methods:[],displayName:"Mapbox",props:{style:{defaultValue:{value:"{}",computed:!1},type:{name:"object"},required:!1,description:"style overrides for the map container"},mapStyle:{defaultValue:{value:'"mapbox://styles/hyperobjekt/cke1roqr302yq19jnlpc8dgr9"',computed:!1},type:{name:"string"},required:!1,description:"URL to the mapbox style"},idMap:{defaultValue:{value:"{}",computed:!1},type:{name:"object"},required:!1,description:"an object that maps integer feature IDs to the feature property ID"},selectedColors:{defaultValue:{value:'["#00ff00"]',computed:!1},type:{name:"arrayOf",value:{name:"string"}},required:!1,description:"array of colors to use for `highlightFeatureIds`"},MapGLProps:{defaultValue:{value:"{}",computed:!1},type:{name:"object"},required:!1,description:"props to pass to the ReactMapGL component"},minZoom:{defaultValue:{value:"2",computed:!1},required:!1},ariaLabel:{defaultValue:{value:'"map"',computed:!1},required:!1},onHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:"handler for when an interactive feature layer is hovered"},onClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:"handler for when an interactive feature is clicked"},onLoad:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:"handler for when the map loads"},children:{type:{name:"node"},required:!1,description:""}}};var components_Mapbox=Mapbox;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/mapbox/src/components/Mapbox.js"]={name:"Mapbox",docgenInfo:Mapbox.__docgenInfo,path:"packages/mapbox/src/components/Mapbox.js"});__webpack_exports__.default={component:components_Mapbox,title:"Visualization/Mapbox",args:{MapGLProps:{mapboxApiAccessToken:"pk.eyJ1IjoiaHlwZXJvYmpla3QiLCJhIjoiY2pzZ3Bnd3piMGV6YTQzbjVqa3Z3dHQxZyJ9.rHobqsY_BjkNbqNQS4DNYw"},defaultViewport:{zoom:11,latitude:40.74,longitude:-73.96},maxBounds:[[-107.6,33.8],[-65,49.9]],minZoom:2}};var Mapbox_stories_Base=function Base(args){return react_default.a.createElement(components_Mapbox,args)};Mapbox_stories_Base.displayName="Base",Mapbox_stories_Base.parameters=Object.assign({storySource:{source:"(args) => <Mapbox {...args} />"}},Mapbox_stories_Base.parameters),Mapbox_stories_Base.__docgenInfo={description:"A base map with no overlays or additional styles",methods:[],displayName:"Base"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/mapbox/src/components/Mapbox.stories.js"]={name:"Base",docgenInfo:Mapbox_stories_Base.__docgenInfo,path:"packages/mapbox/src/components/Mapbox.stories.js"})},1479:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"StyledStates",(function(){return StateMap_stories_StyledStates})),__webpack_require__.d(__webpack_exports__,"Base",(function(){return StateMap_stories_Base}));__webpack_require__(6);var withStyles=__webpack_require__(1494),react=__webpack_require__(0),react_default=__webpack_require__.n(react),prop_types=(__webpack_require__(7),__webpack_require__(19),__webpack_require__(11),__webpack_require__(2)),prop_types_default=__webpack_require__.n(prop_types),clsx_m=__webpack_require__(46),index_umd=__webpack_require__(85),shallow=(__webpack_require__(16),__webpack_require__(27),__webpack_require__(34),__webpack_require__(21),__webpack_require__(22),__webpack_require__(20),__webpack_require__(28),__webpack_require__(9),__webpack_require__(18),__webpack_require__(25),__webpack_require__(23),__webpack_require__(26),__webpack_require__(108)),shallow_default=__webpack_require__.n(shallow),zustand=__webpack_require__(244),hooks_useMapStore=Object(zustand.a)((function(set,get){return{hovered:null,setHovered:function setHovered(hovered){return set({hovered:hovered})},selected:null,setSelected:function setSelected(selected){return set({selected:selected})}}}));function useMapHovered(){return hooks_useMapStore((function(state){return[state.hovered,state.setHovered]}),shallow_default.a)}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var HoverShape_HoverShape=function HoverShape(_ref){var classes=_ref.classes,className=_ref.className,props=(_ref.geo,_objectWithoutProperties(_ref,["classes","className","geo"])),hovered=_slicedToArray(useMapHovered(),1)[0];return react_default.a.createElement("g",_extends({className:Object(clsx_m.a)("svg-map__hover",classes.root,className)},props),hovered&&react_default.a.createElement(index_umd.Geography,{className:Object(clsx_m.a)("svg-map__geography",classes.shape),geography:hovered}))};HoverShape_HoverShape.displayName="HoverShape",HoverShape_HoverShape.propTypes={classes:prop_types_default.a.object,className:prop_types_default.a.string,showLabels:prop_types_default.a.bool,onHover:prop_types_default.a.func,onSelect:prop_types_default.a.func},HoverShape_HoverShape.__docgenInfo={description:"",methods:[],displayName:"HoverShape",props:{classes:{type:{name:"object"},required:!1,description:"Object of class names for the map"},className:{type:{name:"string"},required:!1,description:"Root class name for the map"},showLabels:{type:{name:"bool"},required:!1,description:"Determines whether state level labels are shown"},onHover:{type:{name:"func"},required:!1,description:"handler function for hover events"},onSelect:{type:{name:"func"},required:!1,description:"handler for selecting a location"}}};var exportComponent=Object(withStyles.a)({root:{pointerEvents:"none"},shape:{}},{name:"HypSvgMapHoverShape"})(HoverShape_HoverShape);exportComponent.displayName="HoverShape";function SvgMap_extends(){return(SvgMap_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function SvgMap_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function SvgMap_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/svg-maps/src/components/HoverShape.js"]={name:"HoverShape",docgenInfo:HoverShape_HoverShape.__docgenInfo,path:"packages/svg-maps/src/components/HoverShape.js"});var SvgMap_SvgMap=function SvgMap(_ref){var className=_ref.className,classes=_ref.classes,children=_ref.children,props=SvgMap_objectWithoutProperties(_ref,["className","classes","children"]);return react_default.a.createElement(index_umd.ComposableMap,SvgMap_extends({className:Object(clsx_m.a)("svg-map",classes.root,className),projection:"geoAlbersUsa"},props),children)};SvgMap_SvgMap.displayName="SvgMap",SvgMap_SvgMap.propTypes={className:prop_types_default.a.string},SvgMap_SvgMap.__docgenInfo={description:"Base SVG Map",methods:[],displayName:"SvgMap",props:{className:{type:{name:"string"},required:!1,description:""}}};var SvgMap_exportComponent=Object(withStyles.a)({root:{},hover:{stroke:"#f00",fill:"transparent"}},{name:"HypSvgMap"})(SvgMap_SvgMap);SvgMap_exportComponent.displayName="SvgMap";var components_SvgMap=SvgMap_exportComponent;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/svg-maps/src/components/SvgMap.js"]={name:"SvgMap",docgenInfo:SvgMap_SvgMap.__docgenInfo,path:"packages/svg-maps/src/components/SvgMap.js"});__webpack_require__(24);var src=__webpack_require__(190);__webpack_require__(52);function Shapes_extends(){return(Shapes_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Shapes_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function Shapes_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Shapes_Shapes=function Shapes(_ref){var classes=_ref.classes,className=_ref.className,selected=_ref.selected,hovered=_ref.hovered,geographies=_ref.geographies,onHover=_ref.onHover,onSelect=_ref.onSelect,children=_ref.children,props=Shapes_objectWithoutProperties(_ref,["classes","className","selected","hovered","geographies","onHover","onSelect","children"]);return react_default.a.createElement("g",Shapes_extends({className:Object(clsx_m.a)("svg-map__shapes",classes.root,className)},props),geographies.map((function(geo){var _clsx;return react_default.a.createElement(index_umd.Geography,{className:Object(clsx_m.a)("svg-map__geography",classes.shape,(_clsx={},_defineProperty(_clsx,classes.hovered,hovered&&geo.rsmKey===hovered.rsmKey),_defineProperty(_clsx,classes.selected,selected&&geo.rsmKey===selected.rsmKey),_clsx)),key:geo.rsmKey,geography:geo,onClick:function onClick(e){onSelect&&onSelect(geo,e)},onMouseEnter:function onMouseEnter(e){onHover&&onHover(geo,e)},onMouseLeave:function onMouseLeave(e){onHover&&onHover(null,e)}})})),children)};Shapes_Shapes.displayName="Shapes",Shapes_Shapes.propTypes={classes:prop_types_default.a.object,className:prop_types_default.a.string,showLabels:prop_types_default.a.bool,onHover:prop_types_default.a.func,onSelect:prop_types_default.a.func},Shapes_Shapes.__docgenInfo={description:"",methods:[],displayName:"Shapes",props:{classes:{type:{name:"object"},required:!1,description:"Object of class names for the map"},className:{type:{name:"string"},required:!1,description:"Root class name for the map"},showLabels:{type:{name:"bool"},required:!1,description:"Determines whether state level labels are shown"},onHover:{type:{name:"func"},required:!1,description:"handler function for hover events"},onSelect:{type:{name:"func"},required:!1,description:"handler for selecting a location"}}};var components_Shapes=Object(withStyles.a)({root:{},shape:{fill:"#eee",stroke:"#fff"},hovered:{fill:"#f6f6f6"},selected:{}},{name:"HypSvgMapShapes"})(Shapes_Shapes);"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/svg-maps/src/components/Shapes.js"]={name:"Shapes",docgenInfo:Shapes_Shapes.__docgenInfo,path:"packages/svg-maps/src/components/Shapes.js"});__webpack_require__(120);var src_centroid=__webpack_require__(540);function GeoJsonLabels_extends(){return(GeoJsonLabels_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function GeoJsonLabels_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function GeoJsonLabels_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function GeoJsonLabels(_ref){var _ref$geographies=_ref.geographies,geographies=void 0===_ref$geographies?[]:_ref$geographies,classes=_ref.classes,className=_ref.className,metadata=_ref.metadata,metadataSelector=_ref.metadataSelector,_ref$labelSelector=_ref.labelSelector,labelSelector=void 0===_ref$labelSelector?function(d){return d&&d.id}:_ref$labelSelector,_ref$offsetSelector=_ref.offsetSelector,offsetSelector=void 0===_ref$offsetSelector?function(d){return d&&d.offset}:_ref$offsetSelector,props=GeoJsonLabels_objectWithoutProperties(_ref,["geographies","classes","className","metadata","metadataSelector","labelSelector","offsetSelector"]);return react_default.a.createElement("g",GeoJsonLabels_extends({className:Object(clsx_m.a)("svg-map__labels",classes.root,className)},props),geographies.map((function(geo){var centroid=Object(src_centroid.a)(geo),selector=metadata&&metadataSelector&&metadataSelector(geo),cur=selector?metadata.find(selector):geo,offset=offsetSelector(cur),label=labelSelector(cur),valid=cur&&centroid[0]>-160&&centroid[0]<-67;return react_default.a.createElement("g",{key:geo.rsmKey+"-name",className:Object(clsx_m.a)("svg-map__label",classes.label)},valid&&(offset?react_default.a.createElement(index_umd.Annotation,{subject:centroid,dx:offset[0],dy:offset[1],className:Object(clsx_m.a)("svg-map__annotation",classes.annotation)},react_default.a.createElement("text",{className:Object(clsx_m.a)("svg-map__text",classes.text),x:4,alignmentBaseline:"middle"},label)):react_default.a.createElement(index_umd.Marker,{className:Object(clsx_m.a)("svg-map__marker",classes.marker),coordinates:centroid},react_default.a.createElement("text",{className:Object(clsx_m.a)("svg-map__text",classes.text),y:"2",textAnchor:"middle"},label))))})))}GeoJsonLabels.displayName="GeoJsonLabels",GeoJsonLabels.propTypes={geographies:prop_types_default.a.array,classes:prop_types_default.a.object,className:prop_types_default.a.string,metadata:prop_types_default.a.array,metadataSelector:prop_types_default.a.func,labelSelector:prop_types_default.a.func,offsetSelector:prop_types_default.a.func},GeoJsonLabels.__docgenInfo={description:"",methods:[],displayName:"GeoJsonLabels",props:{geographies:{defaultValue:{value:"[]",computed:!1},type:{name:"array"},required:!1,description:""},labelSelector:{defaultValue:{value:"(d) => d && d.id",computed:!1},type:{name:"func"},required:!1,description:""},offsetSelector:{defaultValue:{value:"(d) => d && d.offset",computed:!1},type:{name:"func"},required:!1,description:""},classes:{type:{name:"object"},required:!1,description:""},className:{type:{name:"string"},required:!1,description:""},metadata:{type:{name:"array"},required:!1,description:""},metadataSelector:{type:{name:"func"},required:!1,description:""}}};var components_GeoJsonLabels=Object(withStyles.a)({root:{pointerEvents:"none"},label:{},marker:{},annotation:{"& path":{stroke:"#ccc"}},text:{fontSize:14,fontFamily:"sans-serif",fill:"#ccc"}},{name:"HypSvgMapGeoJsonLabels"})(GeoJsonLabels);function GeoJsonLayer_extends(){return(GeoJsonLayer_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function GeoJsonLayer_slicedToArray(arr,i){return function GeoJsonLayer_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function GeoJsonLayer_iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function GeoJsonLayer_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return GeoJsonLayer_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return GeoJsonLayer_arrayLikeToArray(o,minLen)}(arr,i)||function GeoJsonLayer_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function GeoJsonLayer_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function GeoJsonLayer_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function GeoJsonLayer_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/svg-maps/src/components/GeoJsonLabels.js"]={name:"GeoJsonLabels",docgenInfo:GeoJsonLabels.__docgenInfo,path:"packages/svg-maps/src/components/GeoJsonLabels.js"});var GeoJsonLayer_GeoJsonLayer=function GeoJsonLayer(_ref){var classes=_ref.classes,className=_ref.className,source=_ref.source,_ref$interactive=_ref.interactive,interactive=void 0!==_ref$interactive&&_ref$interactive,_ref$showLabels=_ref.showLabels,showLabels=void 0!==_ref$showLabels&&_ref$showLabels,metadata=_ref.metadata,metaDataSelector=_ref.metaDataSelector,labelSelector=_ref.labelSelector,labelProps=_ref.labelProps,shapeProps=_ref.shapeProps,onHover=_ref.onHover,onSelect=_ref.onSelect,children=_ref.children,props=GeoJsonLayer_objectWithoutProperties(_ref,["classes","className","source","interactive","showLabels","metadata","metaDataSelector","labelSelector","labelProps","shapeProps","onHover","onSelect","children"]),_useMapHovered2=GeoJsonLayer_slicedToArray(useMapHovered(),2),hovered=_useMapHovered2[0],setHovered=_useMapHovered2[1],_useMapHovered4=GeoJsonLayer_slicedToArray(useMapHovered(),2),selected=_useMapHovered4[0],setSelected=_useMapHovered4[1],handleHover=function handleHover(geo){interactive&&(setHovered(geo),onHover&&onHover(geo))},handleSelect=function handleSelect(geo){interactive&&(setSelected(geo),onSelect&&onSelect(geo))};return react_default.a.createElement(index_umd.Geographies,GeoJsonLayer_extends({className:Object(clsx_m.a)("svg-map__geographies",classes.root,className),geography:source},props),(function(_ref2){var geographies=_ref2.geographies;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(components_Shapes,GeoJsonLayer_extends({selected:selected,hovered:hovered,geographies:geographies,onHover:handleHover,onSelect:handleSelect},shapeProps)),showLabels&&react_default.a.createElement(components_GeoJsonLabels,GeoJsonLayer_extends({geographies:geographies,metadata:metadata,metadataSelector:metaDataSelector,labelSelector:labelSelector},labelProps)),children)}))};GeoJsonLayer_GeoJsonLayer.displayName="GeoJsonLayer",GeoJsonLayer_GeoJsonLayer.propTypes={classes:prop_types_default.a.object,className:prop_types_default.a.string,source:prop_types_default.a.string,interactive:prop_types_default.a.bool,showLabels:prop_types_default.a.bool,metadata:prop_types_default.a.array,metaDataSelector:prop_types_default.a.func,labelProps:prop_types_default.a.object,onHover:prop_types_default.a.func,onSelect:prop_types_default.a.func},GeoJsonLayer_GeoJsonLayer.__docgenInfo={description:"",methods:[],displayName:"GeoJsonLayer",props:{interactive:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:""},showLabels:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:""},classes:{type:{name:"object"},required:!1,description:""},className:{type:{name:"string"},required:!1,description:""},source:{type:{name:"string"},required:!1,description:""},metadata:{type:{name:"array"},required:!1,description:""},metaDataSelector:{type:{name:"func"},required:!1,description:""},labelProps:{type:{name:"object"},required:!1,description:""},onHover:{type:{name:"func"},required:!1,description:""},onSelect:{type:{name:"func"},required:!1,description:""}}};var components_GeoJsonLayer=Object(withStyles.a)({root:{}},{name:"HypSvgMapGeoJsonLayer"})(GeoJsonLayer_GeoJsonLayer);function StateLayer_extends(){return(StateLayer_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function StateLayer_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function StateLayer_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/svg-maps/src/components/GeoJsonLayer.js"]={name:"GeoJsonLayer",docgenInfo:GeoJsonLayer_GeoJsonLayer.__docgenInfo,path:"packages/svg-maps/src/components/GeoJsonLayer.js"});var stateOffsets={VT:[50,-8],NH:[34,2],MA:[30,-1],RI:[28,2],CT:[35,10],NJ:[34,1],DE:[33,0],MD:[47,10],DC:[49,21]},stateMetadata=Object(src.c)().map((function(s){return{id:s.id,val:s.abbr,offset:stateOffsets[s.abbr]}})),stateMetadataSelector=function stateMetadataSelector(geo){return function(data){return data.id===geo.id}},stateLabelSelector=function stateLabelSelector(d){return d&&d.val},StateLayer_StateLayer=function StateLayer(_ref){var classes=_ref.classes,className=_ref.className,shapeProps=_ref.shapeProps,labelProps=_ref.labelProps,props=StateLayer_objectWithoutProperties(_ref,["classes","className","shapeProps","labelProps"]);return react_default.a.createElement(components_GeoJsonLayer,StateLayer_extends({className:Object(clsx_m.a)(classes.root,className),source:"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json",metadata:stateMetadata,metaDataSelector:stateMetadataSelector,labelSelector:stateLabelSelector,shapeProps:Object.assign({classes:{shape:classes.shape,hovered:classes.hovered,selected:classes.selected}},shapeProps),labelProps:Object.assign({classes:{label:classes.label,marker:classes.marker,annotation:classes.annotation,text:classes.text}},labelProps)},props))};StateLayer_StateLayer.displayName="StateLayer",StateLayer_StateLayer.propTypes={labelProps:{},shapeProps:{}},StateLayer_StateLayer.propTypes=components_GeoJsonLayer.propTypes;var StateLayer_exportComponent=Object(withStyles.a)({root:{},shape:{},hovered:{},selected:{},label:{},marker:{},annotation:{},text:{}},{name:"HypStateLayer"})(StateLayer_StateLayer);StateLayer_exportComponent.displayName="StateLayer";var states_StateLayer=StateLayer_exportComponent;function StateMap_extends(){return(StateMap_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function StateMap_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function StateMap_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}StateLayer_StateLayer.__docgenInfo={description:"Renders US state level shapes",methods:[],displayName:"StateLayer",composes:["../GeoJsonLayer"]},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/svg-maps/src/components/states/StateLayer.js"]={name:"StateLayer",docgenInfo:StateLayer_StateLayer.__docgenInfo,path:"packages/svg-maps/src/components/states/StateLayer.js"});var StateMap_StateMap=function StateMap(_ref){var showLabels=_ref.showLabels,interactive=_ref.interactive,onHover=_ref.onHover,onSelect=_ref.onSelect,layerProps=_ref.layerProps,source=_ref.source,_ref$classes=_ref.classes,rootClass=_ref$classes.root,groupClass=_ref$classes.group,hoverClass=_ref$classes.hover,remainingClasses=StateMap_objectWithoutProperties(_ref$classes,["root","group","hover"]),className=_ref.className,children=_ref.children,props=StateMap_objectWithoutProperties(_ref,["showLabels","interactive","onHover","onSelect","layerProps","source","classes","className","children"]);return react_default.a.createElement(components_SvgMap,StateMap_extends({className:Object(clsx_m.a)(rootClass,className),classes:{hover:hoverClass}},props),react_default.a.createElement(states_StateLayer,StateMap_extends({className:groupClass,classes:remainingClasses,source:source,onHover:onHover,onSelect:onSelect,showLabels:showLabels,interactive:interactive},layerProps)),children)};StateMap_StateMap.displayName="StateMap",StateMap_StateMap.defaultProps={source:"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json",layerProps:{},classes:{}},StateMap_StateMap.propTypes={source:prop_types_default.a.string,showLabels:prop_types_default.a.bool,interactive:prop_types_default.a.bool,layerProps:prop_types_default.a.object,classes:prop_types_default.a.object,onHover:prop_types_default.a.func,onSelect:prop_types_default.a.func},StateMap_StateMap.__docgenInfo={description:'A simple state level map based on `react-simple-maps`.  This map uses @material-ui/styles for theming.\n\nany additional props are passed to the [Composable Map Component](https://www.react-simple-maps.io/docs/composable-map/)\n\nTo override styles use the [Higher-order Component API](https://material-ui.com/styles/basics/#hook-api) or [Hook API](https://material-ui.com/styles/basics/#hook-api)\n\n**Higher-order Component API example:**\n\n    const StyledStatesMap = withStyles({\n      hover: { strokeWidth: 4, stroke: "#669" },\n      hovered: { fill: "#eef" },\n      shape: { fill: "#ccf", stroke: "#99c" },\n      text: { fill: "#444" },\n    })(StateMap);\n\n<br />\n\n## Class names\n\nThese keys can be used to override styles on the map\n\n| key          |                                              |\n|--------------|----------------------------------------------|\n| `root`       | root of the map                              |\n| `group`      | group of state layers                        |\n| `shape`      | individual state shapes                      |\n| `hovered`    | state shape style when hovered               |\n| `selected`   | state shape style when selected              |\n| `hover`      | the hover outline                            |\n| `label`      | the label container (`<g>`)                    |\n| `marker`     | marker group for state label                 |\n| `annotation` | annotation group for state pointer and label |\n| `text`       | text element with state label                |',methods:[],displayName:"StateMap",props:{source:{defaultValue:{value:'"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json"',computed:!1},type:{name:"string"},required:!1,description:"URL to geojson source"},layerProps:{defaultValue:{value:"{}",computed:!1},type:{name:"object"},required:!1,description:"props to forward to the GeoJsonLayer"},classes:{defaultValue:{value:"{}",computed:!1},type:{name:"object"},required:!1,description:"object of class names to use for the component"},showLabels:{type:{name:"bool"},required:!1,description:"show state labels on the map"},interactive:{type:{name:"bool"},required:!1,description:"allow hover / click on the state layer"},onHover:{type:{name:"func"},required:!1,description:"handler for when shape is hovered"},onSelect:{type:{name:"func"},required:!1,description:"handler for when shape is selected"}}};var StateMap_exportComponent=Object(withStyles.a)({shape:{},text:{}},{name:"HypStateMap"})(StateMap_StateMap);StateMap_exportComponent.displayName="StateMap";function StateMap_stories_extends(){return(StateMap_stories_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/svg-maps/src/components/states/StateMap.js"]={name:"StateMap",docgenInfo:StateMap_StateMap.__docgenInfo,path:"packages/svg-maps/src/components/states/StateMap.js"});__webpack_exports__.default={component:StateMap_StateMap,title:"Visualization/StateMap",args:{showLabels:!0,interactive:!0,width:800,height:600}};var StyledStatesMap=Object(withStyles.a)({hover:{strokeWidth:4,stroke:"#669"},shape:{fill:"#ccf",stroke:"#99c"},hovered:{fill:"#eef"},text:{fill:"#444"}})(StateMap_StateMap),StateMap_stories_StyledStates=function StyledStates(_ref){var args=StateMap_stories_extends({},_ref);return react_default.a.createElement(StyledStatesMap,args)};StateMap_stories_StyledStates.displayName="StyledStates";var StateMap_stories_Base=function Base(_ref2){var args=StateMap_stories_extends({},_ref2);return react_default.a.createElement(StateMap_StateMap,args)};StateMap_stories_Base.displayName="Base",StateMap_stories_Base.args={showLabels:!1,interactive:!1},StateMap_stories_StyledStates.parameters=Object.assign({storySource:{source:"({ ...args }) => <StyledStatesMap {...args} />"}},StateMap_stories_StyledStates.parameters),StateMap_stories_Base.parameters=Object.assign({storySource:{source:"({ ...args }) => <StateMap {...args} />"}},StateMap_stories_Base.parameters),StateMap_stories_StyledStates.__docgenInfo={description:"Use `withStyles` or provide a `classes` object with class names to override styles",methods:[],displayName:"StyledStates"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/svg-maps/src/components/states/StateMap.stories.js"]={name:"StyledStates",docgenInfo:StateMap_stories_StyledStates.__docgenInfo,path:"packages/svg-maps/src/components/states/StateMap.stories.js"}),StateMap_stories_Base.__docgenInfo={description:"A base map with no overlays or additional styles",methods:[],displayName:"Base"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/svg-maps/src/components/states/StateMap.stories.js"]={name:"Base",docgenInfo:StateMap_stories_Base.__docgenInfo,path:"packages/svg-maps/src/components/states/StateMap.stories.js"})},190:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return selectors_getStateFipsFromAbbr})),__webpack_require__.d(__webpack_exports__,"b",(function(){return selectors_getStateFromFips})),__webpack_require__.d(__webpack_exports__,"c",(function(){return selectors_getStatesArray}));__webpack_require__(120),__webpack_require__(24),__webpack_require__(447),__webpack_require__(6),__webpack_require__(11);var STATES={"01":{full:"Alabama",abbr:"AL",xmin:-88.473227,xmax:-84.88908,ymin:30.223334,ymax:35.008028},"02":{full:"Alaska",abbr:"AK",xmin:-179.148909,xmax:-119.9795,ymin:51.214183,ymax:71.365162},"04":{full:"Arizona",abbr:"AZ",xmin:-114.81651,xmax:-109.045223,ymin:31.332177,ymax:37.00426},"05":{full:"Arkansas",abbr:"AR",xmin:-94.617919,xmax:-89.644395,ymin:33.004106,ymax:36.4996},"06":{full:"California",abbr:"CA",xmin:-124.409591,xmax:-114.131211,ymin:32.534156,ymax:42.009518},"08":{full:"Colorado",abbr:"CO",xmin:-109.060253,xmax:-102.041524,ymin:36.992426,ymax:41.003444},"09":{full:"Connecticut",abbr:"CT",xmin:-73.727775,xmax:-71.786994,ymin:40.980144,ymax:42.050587},10:{full:"Delaware",abbr:"DE",xmin:-75.788658,xmax:-75.048939,ymin:38.451013,ymax:39.839007},11:{full:"District of Columbia",abbr:"DC",xmin:-77.119759,xmax:-76.909395,ymin:38.791645,ymax:38.99511},12:{full:"Florida",abbr:"FL",xmin:-87.634938,xmax:-80.031362,ymin:24.523096,ymax:31.000888},13:{full:"Georgia",abbr:"GA",xmin:-85.605165,xmax:-80.839729,ymin:30.357851,ymax:35.000659},15:{full:"Hawaii",abbr:"HI",xmin:-178.334698,xmax:-154.806773,ymin:18.910361,ymax:28.402123},16:{full:"Idaho",abbr:"ID",xmin:-117.243027,xmax:-111.043564,ymin:41.988057,ymax:49.001146},17:{full:"Illinois",abbr:"IL",xmin:-91.513079,xmax:-87.494756,ymin:36.970298,ymax:42.508481},18:{full:"Indiana",abbr:"IN",xmin:-88.09776,xmax:-84.784579,ymin:37.771742,ymax:41.760592},19:{full:"Iowa",abbr:"IA",xmin:-96.639704,xmax:-90.140061,ymin:40.375501,ymax:43.501196},20:{full:"Kansas",abbr:"KS",xmin:-102.051744,xmax:-94.588413,ymin:36.993016,ymax:40.003162},21:{full:"Kentucky",abbr:"KY",xmin:-89.571509,xmax:-81.964971,ymin:36.497129,ymax:39.147458},22:{full:"Louisiana",abbr:"LA",xmin:-94.043147,xmax:-88.817017,ymin:28.928609,ymax:33.019457},23:{full:"Maine",abbr:"ME",xmin:-71.083924,xmax:-66.949895,ymin:42.977764,ymax:47.459686},24:{full:"Maryland",abbr:"MD",xmin:-79.487651,xmax:-75.048939,ymin:37.911717,ymax:39.723043},25:{full:"Massachusetts",abbr:"MA",xmin:-73.508142,xmax:-69.928393,ymin:41.237964,ymax:42.886589},26:{full:"Michigan",abbr:"MI",xmin:-90.418136,xmax:-82.413474,ymin:41.696118,ymax:48.2388},27:{full:"Minnesota",abbr:"MN",xmin:-97.239209,xmax:-89.491739,ymin:43.499356,ymax:49.384358},28:{full:"Mississippi",abbr:"MS",xmin:-91.655009,xmax:-88.097888,ymin:30.173943,ymax:34.996052},29:{full:"Missouri",abbr:"MO",xmin:-95.774704,xmax:-89.098843,ymin:35.995683,ymax:40.61364},30:{full:"Montana",abbr:"MT",xmin:-116.050003,xmax:-104.039138,ymin:44.358221,ymax:49.00139},31:{full:"Nebraska",abbr:"NE",xmin:-104.053514,xmax:-95.30829,ymin:39.999998,ymax:43.001708},32:{full:"Nevada",abbr:"NV",xmin:-120.005746,xmax:-114.039648,ymin:35.001857,ymax:42.002207},33:{full:"New Hampshire",abbr:"NH",xmin:-72.557247,xmax:-70.610621,ymin:42.69699,ymax:45.305476},34:{full:"New Jersey",abbr:"NJ",xmin:-75.559614,xmax:-73.893979,ymin:38.928519,ymax:41.357423},35:{full:"New Mexico",abbr:"NM",xmin:-109.050173,xmax:-103.001964,ymin:31.332301,ymax:37.000232},36:{full:"New York",abbr:"NY",xmin:-79.762152,xmax:-71.856214,ymin:40.496103,ymax:45.01585},37:{full:"North Carolina",abbr:"NC",xmin:-84.321869,xmax:-75.460621,ymin:33.842316,ymax:36.588117},38:{full:"North Dakota",abbr:"ND",xmin:-104.0489,xmax:-96.554507,ymin:45.935054,ymax:49.000574},39:{full:"Ohio",abbr:"OH",xmin:-84.820159,xmax:-80.518693,ymin:38.403202,ymax:41.977523},40:{full:"Oklahoma",abbr:"OK",xmin:-103.002565,xmax:-94.430662,ymin:33.615833,ymax:37.002206},41:{full:"Oregon",abbr:"OR",xmin:-124.566244,xmax:-116.463504,ymin:41.991794,ymax:46.292035},42:{full:"Pennsylvania",abbr:"PA",xmin:-80.519891,xmax:-74.689516,ymin:39.7198,ymax:42.26986},44:{full:"Rhode Island",abbr:"RI",xmin:-71.862772,xmax:-71.12057,ymin:41.146339,ymax:42.018798},45:{full:"South Carolina",abbr:"SC",xmin:-83.35391,xmax:-78.54203,ymin:32.0346,ymax:35.215402},46:{full:"South Dakota",abbr:"SD",xmin:-104.057698,xmax:-96.436589,ymin:42.479635,ymax:45.94545},47:{full:"Tennessee",abbr:"TN",xmin:-90.310298,xmax:-81.6469,ymin:34.982972,ymax:36.678118},48:{full:"Texas",abbr:"TX",xmin:-106.645646,xmax:-93.508292,ymin:25.837377,ymax:36.500704},49:{full:"Utah",abbr:"UT",xmin:-114.052962,xmax:-109.041058,ymin:36.997968,ymax:42.001567},50:{full:"Vermont",abbr:"VT",xmin:-73.43774,xmax:-71.464555,ymin:42.726853,ymax:45.016659},51:{full:"Virginia",abbr:"VA",xmin:-83.675395,xmax:-75.242266,ymin:36.540738,ymax:39.466012},53:{full:"Washington",abbr:"WA",xmin:-124.763068,xmax:-116.915989,ymin:45.543541,ymax:49.002494},54:{full:"West Virginia",abbr:"WV",xmin:-82.644739,xmax:-77.719519,ymin:37.201483,ymax:40.638801},55:{full:"Wisconsin",abbr:"WI",xmin:-92.888114,xmax:-86.805415,ymin:42.491983,ymax:47.080621},56:{full:"Wyoming",abbr:"WY",xmin:-111.056888,xmax:-104.05216,ymin:40.994746,ymax:45.005904}},selectors_getStateFromFips=function getStateFromFips(fips){return STATES[fips]},selectors_getStatesArray=function getStatesArray(){return Object.keys(STATES).map((function(state){return Object.assign({id:state},STATES[state])}))},selectors_getStateFipsFromAbbr=function getStateFipsFromAbbr(abbr){return abbr&&"us"!==abbr?Object.keys(STATES).find((function(fips){return STATES[fips].abbr.toUpperCase()===abbr.toUpperCase()})):null}},564:function(module,exports,__webpack_require__){__webpack_require__(565),__webpack_require__(714),__webpack_require__(715),__webpack_require__(868),__webpack_require__(1422),__webpack_require__(1453),__webpack_require__(1465),__webpack_require__(1467),module.exports=__webpack_require__(1469)},629:function(module,exports){},715:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(422)}},[[564,1,2]]]);
//# sourceMappingURL=main.341a6502d8091610796f.bundle.js.map